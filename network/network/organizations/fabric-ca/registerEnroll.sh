#!/bin/bash

function createParkingProvider1() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/parkingprovider1.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/parkingprovider1.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca_parkingprovider1.com --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider1.com/ca-cert.pem" 
  { set +x; } 2>/dev/null


  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca_parkingprovider1-com.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca_parkingprovider1-com.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca_parkingprovider1-com.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca_parkingprovider1-com.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/parkingprovider1.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy parkingprovider1.com's CA cert to parkingprovider1.com's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/parkingprovider1.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/parkingprovider1.com/ca-cert.pem" "${PWD}/organizations/peerOrganizations/parkingprovider1.com/msp/tlscacerts/ca.crt"

  # Copy parkingprovider1.com's CA cert to parkingprovider1.com's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/parkingprovider1.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/parkingprovider1.com/ca-cert.pem" "${PWD}/organizations/peerOrganizations/parkingprovider1.com/tlsca/tlsca.parkingprovider1.com-cert.pem"

  # Copy parkingprovider1.com's CA cert to parkingprovider1.com's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/parkingprovider1.com/ca"
  cp "${PWD}/organizations/fabric-ca/parkingprovider1.com/ca-cert.pem" "${PWD}/organizations/peerOrganizations/parkingprovider1.com/ca/ca.parkingprovider1.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca_parkingprovider1.com --id.name peer0 --id.secret peer0pw --id.type peer --id.attrs 'abac.role=provider:ecert' --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider1.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca_parkingprovider1.com --id.name user1 --id.secret user1pw --id.type client --id.attrs 'abac.role=provider:ecert' --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider1.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca_parkingprovider1.com --id.name parkingprovider1.comadmin --id.secret parkingprovider1.comadminpw --id.type admin --id.attrs 'abac.role=provider:ecert' --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider1.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca_parkingprovider1.com -M "${PWD}/organizations/peerOrganizations/parkingprovider1.com/peers/peer0.parkingprovider1.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider1.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/parkingprovider1.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/parkingprovider1.com/peers/peer0.parkingprovider1.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca_parkingprovider1.com -M "${PWD}/organizations/peerOrganizations/parkingprovider1.com/peers/peer0.parkingprovider1.com/tls" --enrollment.profile tls --csr.hosts peer0.parkingprovider1.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider1.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/parkingprovider1.com/peers/peer0.parkingprovider1.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/parkingprovider1.com/peers/peer0.parkingprovider1.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/parkingprovider1.com/peers/peer0.parkingprovider1.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/parkingprovider1.com/peers/peer0.parkingprovider1.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/parkingprovider1.com/peers/peer0.parkingprovider1.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/parkingprovider1.com/peers/peer0.parkingprovider1.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca_parkingprovider1.com -M "${PWD}/organizations/peerOrganizations/parkingprovider1.com/users/User1@parkingprovider1.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider1.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/parkingprovider1.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/parkingprovider1.com/users/User1@parkingprovider1.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://parkingprovider1.comadmin:parkingprovider1.comadminpw@localhost:7054 --caname ca_parkingprovider1.com -M "${PWD}/organizations/peerOrganizations/parkingprovider1.com/users/Admin@parkingprovider1.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider1.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/parkingprovider1.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/parkingprovider1.com/users/Admin@parkingprovider1.com/msp/config.yaml"
}

function createParkingProvider2() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/parkingprovider2.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/parkingprovider2.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7055 --caname ca_parkingprovider2.com --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider2.com/ca-cert.pem"
  { set +x; } 2>/dev/null


  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7055-ca_parkingprovider2-com.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7055-ca_parkingprovider2-com.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7055-ca_parkingprovider2-com.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7055-ca_parkingprovider2-com.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/parkingprovider2.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy parkingprovider2.com's CA cert to parkingprovider2.com's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/parkingprovider2.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/parkingprovider2.com/ca-cert.pem" "${PWD}/organizations/peerOrganizations/parkingprovider2.com/msp/tlscacerts/ca.crt"

  # Copy parkingprovider2.com's CA cert to parkingprovider2.com's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/parkingprovider2.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/parkingprovider2.com/ca-cert.pem" "${PWD}/organizations/peerOrganizations/parkingprovider2.com/tlsca/tlsca.parkingprovider2.com-cert.pem"

  # Copy parkingprovider2.com's CA cert to parkingprovider2.com's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/parkingprovider2.com/ca"
  cp "${PWD}/organizations/fabric-ca/parkingprovider2.com/ca-cert.pem" "${PWD}/organizations/peerOrganizations/parkingprovider2.com/ca/ca.parkingprovider2.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca_parkingprovider2.com --id.name peer0 --id.secret peer0pw --id.type peer --id.attrs 'abac.role=provider:ecert' --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider2.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca_parkingprovider2.com --id.name user1 --id.secret user1pw --id.type client --id.attrs 'abac.role=provider:ecert' --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider2.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca_parkingprovider2.com --id.name parkingprovider2.comadmin --id.secret parkingprovider2.comadminpw --id.type admin --id.attrs 'abac.role=provider:ecert' --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider2.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7055 --caname ca_parkingprovider2.com -M "${PWD}/organizations/peerOrganizations/parkingprovider2.com/peers/peer0.parkingprovider2.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider2.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/parkingprovider2.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/parkingprovider2.com/peers/peer0.parkingprovider2.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7055 --caname ca_parkingprovider2.com -M "${PWD}/organizations/peerOrganizations/parkingprovider2.com/peers/peer0.parkingprovider2.com/tls" --enrollment.profile tls --csr.hosts peer0.parkingprovider2.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider2.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/parkingprovider2.com/peers/peer0.parkingprovider2.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/parkingprovider2.com/peers/peer0.parkingprovider2.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/parkingprovider2.com/peers/peer0.parkingprovider2.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/parkingprovider2.com/peers/peer0.parkingprovider2.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/parkingprovider2.com/peers/peer0.parkingprovider2.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/parkingprovider2.com/peers/peer0.parkingprovider2.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7055 --caname ca_parkingprovider2.com -M "${PWD}/organizations/peerOrganizations/parkingprovider2.com/users/User1@parkingprovider2.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider2.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/parkingprovider2.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/parkingprovider2.com/users/User1@parkingprovider2.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://parkingprovider2.comadmin:parkingprovider2.comadminpw@localhost:7055 --caname ca_parkingprovider2.com -M "${PWD}/organizations/peerOrganizations/parkingprovider2.com/users/Admin@parkingprovider2.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/parkingprovider2.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/parkingprovider2.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/parkingprovider2.com/users/Admin@parkingprovider2.com/msp/config.yaml"
}

function createParkingIntegrator() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/parkingintegrator.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/parkingintegrator.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7056 --caname ca_parkingintegrator.com --tls.certfiles "${PWD}/organizations/fabric-ca/parkingintegrator.com/ca-cert.pem"
  { set +x; } 2>/dev/null


  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7056-ca_parkingintegrator-com.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7056-ca_parkingintegrator-com.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7056-ca_parkingintegrator-com.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7056-ca_parkingintegrator-com.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/parkingintegrator.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy parkingintegrator.com's CA cert to parkingintegrator.com's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/parkingintegrator.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/parkingintegrator.com/ca-cert.pem" "${PWD}/organizations/peerOrganizations/parkingintegrator.com/msp/tlscacerts/ca.crt"

  # Copy parkingintegrator.com's CA cert to parkingintegrator.com's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/parkingintegrator.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/parkingintegrator.com/ca-cert.pem" "${PWD}/organizations/peerOrganizations/parkingintegrator.com/tlsca/tlsca.parkingintegrator.com-cert.pem"

  # Copy parkingintegrator.com's CA cert to parkingintegrator.com's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/parkingintegrator.com/ca"
  cp "${PWD}/organizations/fabric-ca/parkingintegrator.com/ca-cert.pem" "${PWD}/organizations/peerOrganizations/parkingintegrator.com/ca/ca.parkingintegrator.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca_parkingintegrator.com --id.name peer0 --id.secret peer0pw --id.type peer --id.attrs 'abac.role=integrator:ecert' --tls.certfiles "${PWD}/organizations/fabric-ca/parkingintegrator.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca_parkingintegrator.com --id.name user1 --id.secret user1pw --id.type client --id.attrs 'abac.role=integrator:ecert' --tls.certfiles "${PWD}/organizations/fabric-ca/parkingintegrator.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca_parkingintegrator.com --id.name parkingintegrator.comadmin --id.secret parkingintegrator.comadminpw --id.type admin --id.attrs 'abac.role=integrator:ecert' --tls.certfiles "${PWD}/organizations/fabric-ca/parkingintegrator.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7056 --caname ca_parkingintegrator.com -M "${PWD}/organizations/peerOrganizations/parkingintegrator.com/peers/peer0.parkingintegrator.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/parkingintegrator.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/parkingintegrator.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/parkingintegrator.com/peers/peer0.parkingintegrator.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7056 --caname ca_parkingintegrator.com -M "${PWD}/organizations/peerOrganizations/parkingintegrator.com/peers/peer0.parkingintegrator.com/tls" --enrollment.profile tls --csr.hosts peer0.parkingintegrator.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/parkingintegrator.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/parkingintegrator.com/peers/peer0.parkingintegrator.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/parkingintegrator.com/peers/peer0.parkingintegrator.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/parkingintegrator.com/peers/peer0.parkingintegrator.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/parkingintegrator.com/peers/peer0.parkingintegrator.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/parkingintegrator.com/peers/peer0.parkingintegrator.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/parkingintegrator.com/peers/peer0.parkingintegrator.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7056 --caname ca_parkingintegrator.com -M "${PWD}/organizations/peerOrganizations/parkingintegrator.com/users/User1@parkingintegrator.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/parkingintegrator.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/parkingintegrator.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/parkingintegrator.com/users/User1@parkingintegrator.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://parkingintegrator.comadmin:parkingintegrator.comadminpw@localhost:7056 --caname ca_parkingintegrator.com -M "${PWD}/organizations/peerOrganizations/parkingintegrator.com/users/Admin@parkingintegrator.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/parkingintegrator.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/parkingintegrator.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/parkingintegrator.com/users/Admin@parkingintegrator.com/msp/config.yaml"
}

function createOrderer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/orderer.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/orderer.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca_orderer.com --tls.certfiles "${PWD}/organizations/fabric-ca/orderer.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca_orderer-com.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca_orderer-com.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca_orderer-com.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca_orderer-com.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/orderer.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/orderer.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/orderer.com/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/orderer.com/msp/tlscacerts/tlsca.orderer.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/orderer.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/orderer.com/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/orderer.com/tlsca/tlsca.orderer.com-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca_orderer.com --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/orderer.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca_orderer.com --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/orderer.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca_orderer.com -M "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/orderer.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/orderer.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca_orderer.com -M "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/tls" --enrollment.profile tls --csr.hosts orderer.orderer.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/orderer.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/orderer.com/orderers/orderer.orderer.com/msp/tlscacerts/tlsca.orderer.com-cert.pem"

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca_orderer.com -M "${PWD}/organizations/ordererOrganizations/orderer.com/users/Admin@orderer.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/orderer.com/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/orderer.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/orderer.com/users/Admin@orderer.com/msp/config.yaml"
}
